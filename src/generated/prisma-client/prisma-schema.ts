// Code generated by Prisma (prisma@1.29.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateProduct {
  count: Int!
}

type AggregateTransaction {
  count: Int!
}

type AggregateTransactionRaw {
  count: Int!
}

type AggregateURL {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Json

scalar Long

type Mutation {
  createProduct(data: ProductCreateInput!): Product!
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateManyProducts(data: ProductUpdateManyMutationInput!, where: ProductWhereInput): BatchPayload!
  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteManyProducts(where: ProductWhereInput): BatchPayload!
  createTransaction(data: TransactionCreateInput!): Transaction!
  updateTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction
  updateManyTransactions(data: TransactionUpdateManyMutationInput!, where: TransactionWhereInput): BatchPayload!
  upsertTransaction(where: TransactionWhereUniqueInput!, create: TransactionCreateInput!, update: TransactionUpdateInput!): Transaction!
  deleteTransaction(where: TransactionWhereUniqueInput!): Transaction
  deleteManyTransactions(where: TransactionWhereInput): BatchPayload!
  createTransactionRaw(data: TransactionRawCreateInput!): TransactionRaw!
  updateTransactionRaw(data: TransactionRawUpdateInput!, where: TransactionRawWhereUniqueInput!): TransactionRaw
  updateManyTransactionRaws(data: TransactionRawUpdateManyMutationInput!, where: TransactionRawWhereInput): BatchPayload!
  upsertTransactionRaw(where: TransactionRawWhereUniqueInput!, create: TransactionRawCreateInput!, update: TransactionRawUpdateInput!): TransactionRaw!
  deleteTransactionRaw(where: TransactionRawWhereUniqueInput!): TransactionRaw
  deleteManyTransactionRaws(where: TransactionRawWhereInput): BatchPayload!
  createURL(data: URLCreateInput!): URL!
  updateURL(data: URLUpdateInput!, where: URLWhereUniqueInput!): URL
  updateManyURLs(data: URLUpdateManyMutationInput!, where: URLWhereInput): BatchPayload!
  upsertURL(where: URLWhereUniqueInput!, create: URLCreateInput!, update: URLUpdateInput!): URL!
  deleteURL(where: URLWhereUniqueInput!): URL
  deleteManyURLs(where: URLWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Product {
  id: ID!
  uuid: String!
  brand: String!
  category: String!
  shoe: String!
  name: String!
  title: String!
  urlKey: String!
  urlForCheck: String!
  imgURL: String
  releaseDate: DateTime
  retailPrice: Int
  rawData: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductConnection {
  pageInfo: PageInfo!
  edges: [ProductEdge]!
  aggregate: AggregateProduct!
}

input ProductCreateInput {
  uuid: String!
  brand: String!
  category: String!
  shoe: String!
  name: String!
  title: String!
  urlKey: String!
  urlForCheck: String!
  imgURL: String
  releaseDate: DateTime
  retailPrice: Int
  rawData: Json!
}

type ProductEdge {
  node: Product!
  cursor: String!
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  uuid_ASC
  uuid_DESC
  brand_ASC
  brand_DESC
  category_ASC
  category_DESC
  shoe_ASC
  shoe_DESC
  name_ASC
  name_DESC
  title_ASC
  title_DESC
  urlKey_ASC
  urlKey_DESC
  urlForCheck_ASC
  urlForCheck_DESC
  imgURL_ASC
  imgURL_DESC
  releaseDate_ASC
  releaseDate_DESC
  retailPrice_ASC
  retailPrice_DESC
  rawData_ASC
  rawData_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProductPreviousValues {
  id: ID!
  uuid: String!
  brand: String!
  category: String!
  shoe: String!
  name: String!
  title: String!
  urlKey: String!
  urlForCheck: String!
  imgURL: String
  releaseDate: DateTime
  retailPrice: Int
  rawData: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

input ProductSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProductWhereInput
  AND: [ProductSubscriptionWhereInput!]
  OR: [ProductSubscriptionWhereInput!]
  NOT: [ProductSubscriptionWhereInput!]
}

input ProductUpdateInput {
  uuid: String
  brand: String
  category: String
  shoe: String
  name: String
  title: String
  urlKey: String
  urlForCheck: String
  imgURL: String
  releaseDate: DateTime
  retailPrice: Int
  rawData: Json
}

input ProductUpdateManyMutationInput {
  uuid: String
  brand: String
  category: String
  shoe: String
  name: String
  title: String
  urlKey: String
  urlForCheck: String
  imgURL: String
  releaseDate: DateTime
  retailPrice: Int
  rawData: Json
}

input ProductWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  brand: String
  brand_not: String
  brand_in: [String!]
  brand_not_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_gt: String
  brand_gte: String
  brand_contains: String
  brand_not_contains: String
  brand_starts_with: String
  brand_not_starts_with: String
  brand_ends_with: String
  brand_not_ends_with: String
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  shoe: String
  shoe_not: String
  shoe_in: [String!]
  shoe_not_in: [String!]
  shoe_lt: String
  shoe_lte: String
  shoe_gt: String
  shoe_gte: String
  shoe_contains: String
  shoe_not_contains: String
  shoe_starts_with: String
  shoe_not_starts_with: String
  shoe_ends_with: String
  shoe_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  urlKey: String
  urlKey_not: String
  urlKey_in: [String!]
  urlKey_not_in: [String!]
  urlKey_lt: String
  urlKey_lte: String
  urlKey_gt: String
  urlKey_gte: String
  urlKey_contains: String
  urlKey_not_contains: String
  urlKey_starts_with: String
  urlKey_not_starts_with: String
  urlKey_ends_with: String
  urlKey_not_ends_with: String
  urlForCheck: String
  urlForCheck_not: String
  urlForCheck_in: [String!]
  urlForCheck_not_in: [String!]
  urlForCheck_lt: String
  urlForCheck_lte: String
  urlForCheck_gt: String
  urlForCheck_gte: String
  urlForCheck_contains: String
  urlForCheck_not_contains: String
  urlForCheck_starts_with: String
  urlForCheck_not_starts_with: String
  urlForCheck_ends_with: String
  urlForCheck_not_ends_with: String
  imgURL: String
  imgURL_not: String
  imgURL_in: [String!]
  imgURL_not_in: [String!]
  imgURL_lt: String
  imgURL_lte: String
  imgURL_gt: String
  imgURL_gte: String
  imgURL_contains: String
  imgURL_not_contains: String
  imgURL_starts_with: String
  imgURL_not_starts_with: String
  imgURL_ends_with: String
  imgURL_not_ends_with: String
  releaseDate: DateTime
  releaseDate_not: DateTime
  releaseDate_in: [DateTime!]
  releaseDate_not_in: [DateTime!]
  releaseDate_lt: DateTime
  releaseDate_lte: DateTime
  releaseDate_gt: DateTime
  releaseDate_gte: DateTime
  retailPrice: Int
  retailPrice_not: Int
  retailPrice_in: [Int!]
  retailPrice_not_in: [Int!]
  retailPrice_lt: Int
  retailPrice_lte: Int
  retailPrice_gt: Int
  retailPrice_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
}

input ProductWhereUniqueInput {
  id: ID
  uuid: String
}

type Query {
  product(where: ProductWhereUniqueInput!): Product
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!
  transaction(where: TransactionWhereUniqueInput!): Transaction
  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction]!
  transactionsConnection(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionConnection!
  transactionRaw(where: TransactionRawWhereUniqueInput!): TransactionRaw
  transactionRaws(where: TransactionRawWhereInput, orderBy: TransactionRawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TransactionRaw]!
  transactionRawsConnection(where: TransactionRawWhereInput, orderBy: TransactionRawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionRawConnection!
  uRL(where: URLWhereUniqueInput!): URL
  uRLs(where: URLWhereInput, orderBy: URLOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [URL]!
  uRLsConnection(where: URLWhereInput, orderBy: URLOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): URLConnection!
  node(id: ID!): Node
}

type Subscription {
  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload
  transaction(where: TransactionSubscriptionWhereInput): TransactionSubscriptionPayload
  transactionRaw(where: TransactionRawSubscriptionWhereInput): TransactionRawSubscriptionPayload
  uRL(where: URLSubscriptionWhereInput): URLSubscriptionPayload
}

type Transaction {
  id: ID!
  chainId: String!
  date: String!
  shoeSize: String!
  productId: String!
  skuUuid: String!
  localAmount: String!
  localCurrency: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TransactionConnection {
  pageInfo: PageInfo!
  edges: [TransactionEdge]!
  aggregate: AggregateTransaction!
}

input TransactionCreateInput {
  chainId: String!
  date: String!
  shoeSize: String!
  productId: String!
  skuUuid: String!
  localAmount: String!
  localCurrency: String!
}

type TransactionEdge {
  node: Transaction!
  cursor: String!
}

enum TransactionOrderByInput {
  id_ASC
  id_DESC
  chainId_ASC
  chainId_DESC
  date_ASC
  date_DESC
  shoeSize_ASC
  shoeSize_DESC
  productId_ASC
  productId_DESC
  skuUuid_ASC
  skuUuid_DESC
  localAmount_ASC
  localAmount_DESC
  localCurrency_ASC
  localCurrency_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TransactionPreviousValues {
  id: ID!
  chainId: String!
  date: String!
  shoeSize: String!
  productId: String!
  skuUuid: String!
  localAmount: String!
  localCurrency: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TransactionRaw {
  id: ID!
  url: String!
  uuid: String!
  amount: Int!
  category: String!
  rawData: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TransactionRawConnection {
  pageInfo: PageInfo!
  edges: [TransactionRawEdge]!
  aggregate: AggregateTransactionRaw!
}

input TransactionRawCreateInput {
  url: String!
  uuid: String!
  amount: Int!
  category: String!
  rawData: Json!
}

type TransactionRawEdge {
  node: TransactionRaw!
  cursor: String!
}

enum TransactionRawOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  uuid_ASC
  uuid_DESC
  amount_ASC
  amount_DESC
  category_ASC
  category_DESC
  rawData_ASC
  rawData_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TransactionRawPreviousValues {
  id: ID!
  url: String!
  uuid: String!
  amount: Int!
  category: String!
  rawData: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TransactionRawSubscriptionPayload {
  mutation: MutationType!
  node: TransactionRaw
  updatedFields: [String!]
  previousValues: TransactionRawPreviousValues
}

input TransactionRawSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TransactionRawWhereInput
  AND: [TransactionRawSubscriptionWhereInput!]
  OR: [TransactionRawSubscriptionWhereInput!]
  NOT: [TransactionRawSubscriptionWhereInput!]
}

input TransactionRawUpdateInput {
  url: String
  uuid: String
  amount: Int
  category: String
  rawData: Json
}

input TransactionRawUpdateManyMutationInput {
  url: String
  uuid: String
  amount: Int
  category: String
  rawData: Json
}

input TransactionRawWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  uuid: String
  uuid_not: String
  uuid_in: [String!]
  uuid_not_in: [String!]
  uuid_lt: String
  uuid_lte: String
  uuid_gt: String
  uuid_gte: String
  uuid_contains: String
  uuid_not_contains: String
  uuid_starts_with: String
  uuid_not_starts_with: String
  uuid_ends_with: String
  uuid_not_ends_with: String
  amount: Int
  amount_not: Int
  amount_in: [Int!]
  amount_not_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_gt: Int
  amount_gte: Int
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TransactionRawWhereInput!]
  OR: [TransactionRawWhereInput!]
  NOT: [TransactionRawWhereInput!]
}

input TransactionRawWhereUniqueInput {
  id: ID
  url: String
}

type TransactionSubscriptionPayload {
  mutation: MutationType!
  node: Transaction
  updatedFields: [String!]
  previousValues: TransactionPreviousValues
}

input TransactionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TransactionWhereInput
  AND: [TransactionSubscriptionWhereInput!]
  OR: [TransactionSubscriptionWhereInput!]
  NOT: [TransactionSubscriptionWhereInput!]
}

input TransactionUpdateInput {
  chainId: String
  date: String
  shoeSize: String
  productId: String
  skuUuid: String
  localAmount: String
  localCurrency: String
}

input TransactionUpdateManyMutationInput {
  chainId: String
  date: String
  shoeSize: String
  productId: String
  skuUuid: String
  localAmount: String
  localCurrency: String
}

input TransactionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  chainId: String
  chainId_not: String
  chainId_in: [String!]
  chainId_not_in: [String!]
  chainId_lt: String
  chainId_lte: String
  chainId_gt: String
  chainId_gte: String
  chainId_contains: String
  chainId_not_contains: String
  chainId_starts_with: String
  chainId_not_starts_with: String
  chainId_ends_with: String
  chainId_not_ends_with: String
  date: String
  date_not: String
  date_in: [String!]
  date_not_in: [String!]
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_contains: String
  date_not_contains: String
  date_starts_with: String
  date_not_starts_with: String
  date_ends_with: String
  date_not_ends_with: String
  shoeSize: String
  shoeSize_not: String
  shoeSize_in: [String!]
  shoeSize_not_in: [String!]
  shoeSize_lt: String
  shoeSize_lte: String
  shoeSize_gt: String
  shoeSize_gte: String
  shoeSize_contains: String
  shoeSize_not_contains: String
  shoeSize_starts_with: String
  shoeSize_not_starts_with: String
  shoeSize_ends_with: String
  shoeSize_not_ends_with: String
  productId: String
  productId_not: String
  productId_in: [String!]
  productId_not_in: [String!]
  productId_lt: String
  productId_lte: String
  productId_gt: String
  productId_gte: String
  productId_contains: String
  productId_not_contains: String
  productId_starts_with: String
  productId_not_starts_with: String
  productId_ends_with: String
  productId_not_ends_with: String
  skuUuid: String
  skuUuid_not: String
  skuUuid_in: [String!]
  skuUuid_not_in: [String!]
  skuUuid_lt: String
  skuUuid_lte: String
  skuUuid_gt: String
  skuUuid_gte: String
  skuUuid_contains: String
  skuUuid_not_contains: String
  skuUuid_starts_with: String
  skuUuid_not_starts_with: String
  skuUuid_ends_with: String
  skuUuid_not_ends_with: String
  localAmount: String
  localAmount_not: String
  localAmount_in: [String!]
  localAmount_not_in: [String!]
  localAmount_lt: String
  localAmount_lte: String
  localAmount_gt: String
  localAmount_gte: String
  localAmount_contains: String
  localAmount_not_contains: String
  localAmount_starts_with: String
  localAmount_not_starts_with: String
  localAmount_ends_with: String
  localAmount_not_ends_with: String
  localCurrency: String
  localCurrency_not: String
  localCurrency_in: [String!]
  localCurrency_not_in: [String!]
  localCurrency_lt: String
  localCurrency_lte: String
  localCurrency_gt: String
  localCurrency_gte: String
  localCurrency_contains: String
  localCurrency_not_contains: String
  localCurrency_starts_with: String
  localCurrency_not_starts_with: String
  localCurrency_ends_with: String
  localCurrency_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TransactionWhereInput!]
  OR: [TransactionWhereInput!]
  NOT: [TransactionWhereInput!]
}

input TransactionWhereUniqueInput {
  id: ID
}

type URL {
  id: ID!
  url: String!
  ProductAmount: Int!
  lastPage: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  isComplete: Boolean!
}

type URLConnection {
  pageInfo: PageInfo!
  edges: [URLEdge]!
  aggregate: AggregateURL!
}

input URLCreateInput {
  url: String!
  ProductAmount: Int!
  lastPage: Int!
  isComplete: Boolean!
}

type URLEdge {
  node: URL!
  cursor: String!
}

enum URLOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  ProductAmount_ASC
  ProductAmount_DESC
  lastPage_ASC
  lastPage_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  isComplete_ASC
  isComplete_DESC
}

type URLPreviousValues {
  id: ID!
  url: String!
  ProductAmount: Int!
  lastPage: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  isComplete: Boolean!
}

type URLSubscriptionPayload {
  mutation: MutationType!
  node: URL
  updatedFields: [String!]
  previousValues: URLPreviousValues
}

input URLSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: URLWhereInput
  AND: [URLSubscriptionWhereInput!]
  OR: [URLSubscriptionWhereInput!]
  NOT: [URLSubscriptionWhereInput!]
}

input URLUpdateInput {
  url: String
  ProductAmount: Int
  lastPage: Int
  isComplete: Boolean
}

input URLUpdateManyMutationInput {
  url: String
  ProductAmount: Int
  lastPage: Int
  isComplete: Boolean
}

input URLWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  ProductAmount: Int
  ProductAmount_not: Int
  ProductAmount_in: [Int!]
  ProductAmount_not_in: [Int!]
  ProductAmount_lt: Int
  ProductAmount_lte: Int
  ProductAmount_gt: Int
  ProductAmount_gte: Int
  lastPage: Int
  lastPage_not: Int
  lastPage_in: [Int!]
  lastPage_not_in: [Int!]
  lastPage_lt: Int
  lastPage_lte: Int
  lastPage_gt: Int
  lastPage_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  isComplete: Boolean
  isComplete_not: Boolean
  AND: [URLWhereInput!]
  OR: [URLWhereInput!]
  NOT: [URLWhereInput!]
}

input URLWhereUniqueInput {
  id: ID
}
`